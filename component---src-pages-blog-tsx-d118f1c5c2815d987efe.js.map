{"version":3,"sources":["webpack:///./src/PostCard.tsx","webpack:///./src/pages/blog.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./gatsby-config.js","webpack:///./src/Header.tsx","webpack:///./src/SidebarContents.tsx","webpack:///./src/TableOfContents.tsx","webpack:///./src/Layout.tsx"],"names":["PostCard","_ref","post","react_default","a","createElement","card_default","title","gatsby_browser_entry","to","fields","slug","style","color","fontWeight","frontmatter","float","date","excerpt","__webpack_require__","d","__webpack_exports__","pageQuery","BlogPage","posts","data","allMdx","edges","filter","edge","node","map","PostCard_PostCard","key","id","Layout","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","query","render","finalData","Fragment","props","children","Consumer","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","_objectSpread","json","siteMetadata","plugins","resolve","options","name","path","__dirname","typeName","short_name","start_url","background_color","theme_color","display","icon","defaultLayouts","extensions","gatsbyRemarkPlugins","maxWidth","classPrefix","inlineCodeMarker","showLineNumbers","noInlineHighlight","pathPrefix","Header","_Component","apply","this","arguments","prototype","siteTitle","row","menu","mode","Item","href","target","type","Component","SubMenu","Menu","constructTree","list","tree","dir","forEach","item","parents","push","subtree","_loop","i","length","newNode","find","sortTree","sort","b","SidebarContents","root","_convertToTree","convertToTree","startsWith","currentPath","window","pathname","replace","defaultOpenKeys","affix","minWidth","height","borderRight","selectedKeys","loop","_ref2","activePath","_1456355057","Link","Anchor","filterAnchorDetails","anchors","last_depth","slice","call","anchor","depth","parseInt","parentElement","nodeName","innerText","deleteNode","j","index","splice","TableOfContents","_React$useState","useState","setAnchors","useLayoutEffect","document","getElementsByClassName","anchor_default","margin","Sider","Content","RootLayout","sidebarRoot","allPosts","indexOf","site","width","padding","overflow","Helmet_default","meta","content","lang","Header_Header","gridTemplateColumns","SidebarContents_SidebarContents","layout","background","_1423624756"],"mappings":"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","file":"component---src-pages-blog-tsx-d118f1c5c2815d987efe.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport Card from 'antd/lib/card'\nimport 'antd/lib/card/style/css'\n\nexport const PostCard = ({ post }) => (\n  <div>\n    <Card\n      title={\n        <div>\n          <Link\n            to={post.fields.slug}\n            style={{ color: 'black', fontWeight: 'bold' }}\n          >\n            {post.frontmatter.title}\n          </Link>\n          <span\n            style={{\n              float: 'right',\n              color: 'grey',\n            }}\n          >\n            {post.frontmatter.date}\n          </span>\n        </div>\n      }\n    >\n      {post.excerpt}\n    </Card>\n    <br />\n  </div>\n)\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport { RootLayout as Layout } from '../Layout'\nimport { PostCard } from '../PostCard'\n\nconst BlogPage = ({\n  data: {\n    allMdx: { edges },\n  },\n}: any) => {\n  const posts = edges\n    .filter((edge: any) => !!edge.node.frontmatter.date)\n    .map((edge: any) => <PostCard key={edge.node.id} post={edge.node} />)\n  return (\n    <Layout>\n      <div>{posts}</div>\n    </Layout>\n  )\n}\n\nexport default BlogPage\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    allMdx(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: { frontmatter: { root: { eq: $path } } }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = {\n  siteMetadata: {\n    title: 'Gatsby Ant-Design Documentation Starter',\n  },\n  plugins: [\n    `gatsby-plugin-typescript`,\n    `gatsby-plugin-react-helmet`,\n    {\n      resolve: `gatsby-source-filesystem`,\n      options: {\n        name: `images`,\n        path: `${__dirname}/src/images`,\n      },\n    },\n    {\n      resolve: `gatsby-transformer-json`,\n      options: {\n        typeName: `MenuItems`, // a fixed string\n      },\n    },\n    {\n      resolve: `gatsby-source-filesystem`,\n      options: {\n        name: `menuItems`,\n        path: `${__dirname}/src/menuItems`,\n      },\n    },\n    {\n      resolve: `gatsby-source-filesystem`,\n      options: {\n        name: `contents`,\n        path: `${__dirname}/contents`,\n      },\n    },\n    `gatsby-transformer-sharp`,\n    `gatsby-plugin-sharp`,\n    {\n      resolve: `gatsby-plugin-manifest`,\n      options: {\n        name: 'gatsby-starter-markdown',\n        short_name: 'starter',\n        start_url: '/',\n        background_color: '#663399',\n        theme_color: '#663399',\n        display: 'minimal-ui',\n        icon: 'src/images/gatsby-icon.png', // This path is relative to the root of the site.\n      },\n    },\n    {\n      resolve: `gatsby-plugin-mdx`,\n      options: {\n        defaultLayouts: {\n          default: require.resolve('./src/Layout.tsx'),\n        },\n        extensions: ['.mdx', '.md'],\n        // workaround: https://github.com/gatsbyjs/gatsby/issues/16422#issuecomment-518985316\n        plugins: [`gatsby-remark-autolink-headers`],\n        gatsbyRemarkPlugins: [\n          `gatsby-remark-katex`,\n          {\n            resolve: `gatsby-remark-images`,\n            options: {\n              maxWidth: 1035,\n            },\n          },\n          `gatsby-remark-autolink-headers`,\n          {\n            resolve: `gatsby-remark-prismjs`,\n            options: {\n              classPrefix: 'language-',\n              inlineCodeMarker: null,\n              showLineNumbers: true,\n              noInlineHighlight: false,\n            },\n          },\n        ],\n      },\n    },\n    `gatsby-plugin-remove-trailing-slashes`,\n    // this (optional) plugin enables Progressive Web App + Offline functionality\n    // To learn more, visit: https://gatsby.app/offline\n    // 'gatsby-plugin-offline',\n  ],\n  /// this must match the path your webpage is displayed from\n  pathPrefix: process.env.NODE_ENV === 'development' ? '' : '/gatsbyjs-test',\n}\n","import React, { Component } from 'react'\nimport { Link } from 'gatsby'\nimport { Menu, Row, Icon } from 'antd'\n\ninterface Props {\n  siteTitle: string\n}\n\nexport class Header extends Component<Props> {\n  render() {\n    const { siteTitle } = this.props\n    return (\n      <Row>\n        <Menu mode=\"horizontal\">\n          <Menu.Item>\n            <Link to=\"/docs/get-started/introduction/\">{siteTitle}</Link>\n          </Menu.Item>\n          <Menu.Item>\n            <a\n              href=\"https://github.com/jannikbuschke/gatsby-antd-docs\"\n              target=\"_blank\"\n            >\n              <Icon type=\"github\" />\n              GitHub\n            </a>\n          </Menu.Item>\n          <Menu.Item>\n            <a href=\"https://twitter.com/jannikbuschke\" target=\"_blank\">\n              <Icon type=\"twitter\" />\n              Twitter\n            </a>\n          </Menu.Item>\n        </Menu>\n      </Row>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { graphql, StaticQuery, Link } from 'gatsby'\nimport { Affix, Menu } from 'antd'\nimport 'antd/lib/menu/style/css'\nimport { pathPrefix } from '../gatsby-config'\n\nconst SubMenu = Menu.SubMenu\n\nconst convertToTree = data => {\n  const list = data.map(edge => {\n    return {\n      path: edge.node.fields.slug,\n      key: edge.node.id,\n      title: edge.node.frontmatter.title,\n      parents: edge.node.frontmatter.parents,\n    }\n  })\n  return constructTree(list)\n}\n\nconst constructTree = list => {\n  let tree = []\n  let dir = []\n  list.forEach(item => {\n    if (item.parents === [] || item.parents === null) tree.push(item)\n    else {\n      let subtree = tree\n      for (let i = 0; i < item.parents.length; i++) {\n        if (\n          subtree.filter(\n            node => node.title === item.parents[i] && node.children\n          ).length === 0\n        ) {\n          const newNode = {\n            key: item.path,\n            title: item.parents[i],\n            children: [],\n          }\n          subtree.push(newNode)\n          dir.push(newNode)\n        }\n        subtree = subtree.find(\n          node => node.title === item.parents[i] && node.children\n        ).children\n      }\n      subtree.push(item)\n    }\n  })\n  return [tree, dir]\n}\n\nconst sortTree = tree => {\n  tree.sort((a, b) => {\n    if (\n      ((a.children && b.children) || (!a.children && !b.children)) &&\n      a.title > b.title\n    )\n      return 1\n    else if (a.children) return 1\n    return -1\n  })\n}\n\ninterface Props {\n  root: any\n}\n\nexport const SidebarContents = ({ root }: Props) => {\n  return (\n    <StaticQuery\n      query={graphql`\n        query sidebarContentQuery {\n          allMdx(sort: { order: ASC, fields: [fields___slug] }) {\n            edges {\n              node {\n                fields {\n                  slug\n                }\n                id\n                frontmatter {\n                  title\n                  parents\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => {\n        const [tree, dir] = convertToTree(\n          data.allMdx.edges.filter(node =>\n            node.node.fields.slug.startsWith(root)\n          )\n        )\n        sortTree(tree)\n        const loop = ({ data, activePath }) =>\n          data.map(item => {\n            if (item.children) {\n              sortTree(item.children)\n              return (\n                <SubMenu\n                  key={item.key}\n                  title={<span style={{ fontWeight: 900 }}>{item.title}</span>}\n                >\n                  {loop({ data: item.children, activePath })}\n                </SubMenu>\n              )\n            }\n            return (\n              <Menu.Item key={item.path}>\n                <Link to={item.path}>\n                  <div>{item.title}</div>\n                </Link>\n              </Menu.Item>\n            )\n          })\n\n        const currentPath = typeof window !== 'undefined'? window.location.pathname.replace(pathPrefix,\"\") : \"/\"\n        const defaultOpenKeys = dir.map(item => item.key)\n        return (\n          <Affix>\n            <Menu\n              mode=\"inline\"\n              style={{ minWidth: 180, height: '100%', borderRight: 0 }}\n              defaultOpenKeys={defaultOpenKeys}\n              selectedKeys={[currentPath]}\n            >\n              {loop({ data: tree, activePath: [currentPath] })}\n            </Menu>\n          </Affix>\n        )\n      }}\n    />\n  )\n}\n","import React from 'react'\nimport Anchor from 'antd/lib/anchor'\nimport 'antd/lib/anchor/style/css'\n\nconst { Link } = Anchor\n\nconst filterAnchorDetails = anchors => {\n  let last_depth = 0\n  anchors = [].slice.call(anchors).map(anchor => {\n    let depth = parseInt(anchor.parentElement.nodeName[1])\n    if (last_depth !== 0 && depth > last_depth) depth = last_depth + 1\n    last_depth = depth\n    return {\n      href: '#' + anchor.parentElement.id,\n      title: anchor.parentElement.innerText,\n      depth: depth,\n      children: [],\n    }\n  })\n  constructTree(anchors)\n  return anchors\n}\n\nconst constructTree = list => {\n  let deleteNode = []\n  for (let i = 0; i < list.length; i++) {\n    for (let j = i + 1; j < list.length; j++) {\n      if (list[i].depth + 1 === list[j].depth) {\n        list[i].children.push(list[j])\n        deleteNode.push(j)\n      } else if (list[i].depth >= list[j].depth) break\n    }\n  }\n  deleteNode.sort((a, b) => b - a).forEach(index => list.splice(index, 1))\n}\n\nexport function TableOfContents() {\n  const [anchors, setAnchors] = React.useState<any[]>([])\n\n  React.useLayoutEffect(() => {\n    const anchors = document.getElementsByClassName('post-toc-anchor')\n    setAnchors(filterAnchorDetails(anchors))\n  }, [])\n\n  const loop = data =>\n    data.map(item => {\n      if (item.children.length > 0) {\n        return (\n          <Link href={item.href} title={item.title} key={item.href}>\n            {loop(item.children)}\n          </Link>\n        )\n      }\n      return <Link href={item.href} title={item.title} key={item.href} />\n    })\n  return (\n    <Anchor style={{ margin: '50px 50px 0px 0px' }}>{loop(anchors)}</Anchor>\n  )\n}\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { Header } from './Header'\nimport { pathPrefix } from '../gatsby-config'\nimport { Layout } from 'antd'\nimport { SidebarContents } from './SidebarContents'\nimport { TableOfContents } from './TableOfContents'\nconst { Sider, Content } = Layout\n\nexport function RootLayout({ children, sidebarRoot }: any) {\n  return (\n    <StaticQuery\n      query={graphql`\n        query SiteTitleQuery {\n          site {\n            siteMetadata {\n              title\n            }\n          }\n          allMdx {\n            edges {\n              node {\n                fields {\n                  slug\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => {\n        const allPosts = data.allMdx.edges.map(\n          (edge: any) => edge.node.fields.slug\n        )\n        let onPostPage\n        if (typeof window !== 'undefined') {\n          const path = window.location.pathname.replace(\n            pathPrefix.slice(0, -1),\n            ''\n          )\n          if (\n            allPosts.indexOf(path) >= 0 ||\n            allPosts.indexOf(path.slice(0, -1)) >= 0\n          ) {\n            onPostPage = true\n          } else {\n            onPostPage = false\n          }\n        }\n\n        const { title } = data.site.siteMetadata\n\n        return (\n          <div style={{ width: '100%', padding: 0, overflow: 'hidden' }}>\n            <Helmet\n              title={data.site.siteMetadata.title}\n              meta={[\n                { name: 'description', content: 'Sample' },\n                { name: 'keywords', content: 'sample, something' },\n              ]}\n            >\n              <html lang=\"en\" />\n            </Helmet>\n            <Header siteTitle={title} />\n\n            <div\n              style={{\n                display: 'grid',\n                gridTemplateColumns: 'auto 1fr auto',\n                height: '100%',\n              }}\n            >\n              <SidebarContents root={sidebarRoot} />\n              <Layout>\n                <Content\n                  style={{\n                    background: '#fff',\n                    padding: 24,\n                    margin: 0,\n                  }}\n                >\n                  {children}\n                </Content>\n              </Layout>\n              <TableOfContents />\n            </div>\n            <Layout>\n              <Sider\n                width={200}\n                style={{ background: '#fff', height: '100%' }}\n              />\n            </Layout>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nexport default RootLayout\n"],"sourceRoot":""}